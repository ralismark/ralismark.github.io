// Reset ----------------------------------------------------------------------

*, *::before, *::after {
	box-sizing: border-box;
}

html, body, div {
	margin: 0;
	padding: 0;
}

html {
	--accent: #{$accent};
	--accent-bg: #{$accent-bg};
	--secondary: #{$secondary};
	--tertiary: #{$tertiary};
	--hr-fg: #{$hr-fg};
}

// Typography -----------------------------------------------------------------

// We default to a dark theme
// TODO is this too opinionated to be in foundation

@mixin light {
	html.light & { @content }
	@media (prefers-color-scheme: light) { @content }
	@media print { @content }
}

html {
	--body-bg: #191a1a;
	--body-fg: #e7e6e5;

	@include light {
		--body-bg: initial;
		--body-fg: initial;
	}

	color: var(--body-fg);
	background-color: var(--body-bg);

	font: $font;
	text-align: justify;
}

pre, code {
	font: $mono-font;
	tab-size: 4;
}

h1, h2, h3, h4, h5, h6 {
	font-weight: 500;
}

strong {
	font-weight: 700;
}

h1 {
	text-align: center;
	color: $accent;
}

// make KaTeX the right size
.katex {
	font-size: 1.1em !important;
}

// a better colour for links
a:not([role=button]) {
	color: $tertiary;
	text-decoration: underline fade-out($tertiary, 0.6);

	&:hover {
		color: darken($tertiary, 15%);
		text-decoration: underline;
	}
}

h1 > a:not([role=button]),
h2 > a:not([role=button]),
h3 > a:not([role=button]),
h4 > a:not([role=button]),
h5 > a:not([role=button]),
h6 > a:not([role=button]) {
	color: $accent;
	text-decoration: none;

	&:hover {
		color: darken($accent, 15%);
	}
}

// italicise dates & times
time {
	font-style: italic;
}

figcaption {
	text-align: center;
	font-style: italic;
}

// inline icons
img.icon, svg.icon {
	vertical-align: middle;
}

// Layout: Vertical -----------------------------------------------------------

pre {
	margin-top: 0;
	margin-bottom: 0;
}

p, div.highlighter-rouge,
h1, h2, h3, h4, h5, h6,
details,
ol, ul
{
	// Use margin collapse
	margin: 0.5em 0;
}

.katex-display {
	// avoid scrollbar popping up
	padding: .5em 0;
}

// Layout: Horizontal ---------------------------------------------------------

// code blocks (just <code> is inline)
pre {
	overflow-x: scroll;
	overflow-y: hidden; // unicode things. TODO does this cause issues if there's too much tall things?

	code {
		// TODO what does this do?
		position: relative; // to become reference for percent-based length
		display: block;
		padding: 0 .3em;
		width: fit-content;
		min-width: 100%;
	}
}

.katex-display {
	overflow-x: scroll;
}

img, svg {
	max-width: 100%;
	height: auto;
}

textarea {
	width: 100%;
	// stop horizontal resizing without resize: vertical
	max-width: 100%;
	min-width: 100%;
}

img:not(.icon), svg:not(.icon) {
	// centre align
	display: block;
	margin: 0 auto;
}

// make table centre aligned if narrower than space, and scroll if wider than space
table:not(.rouge-line-table):not(.rouge-table) {
	border-collapse: collapse; // merge borders. TODO why, and should this be a reset?

	display: block; // FIXME accessibility issue, see https://developer.mozilla.org/en-US/docs/Web/CSS/display#tables
	margin: 0 auto;
	width: fit-content;
	max-width: 100%;
	overflow-x: scroll;

	th, td {
		padding: 0.5em;
		text-align: center; // center all elements
	}
}

// Layout: Content Width ------------------------------------------------------

html {
	$breaking-width: 45rem; // "clamp" page width to this if above. Used to transition between desktop-like and mobile-like sizing
	$content-frac: .90; // maximum proportion of page width to use for content (i.e. remaining space is margin)

	// --content-width is width of content
	// --inset-margin is extra margin for "inset" thing (e.g. admonitions)
	// --bleed-size is "negative margin" for bleed elements

	--content-width: #{$breaking-width * $content-frac};
	--bleed-size: calc(25vw - #{$breaking-width * $content-frac / 4});
	--inset-margin: 1rem;

	@media(max-width: $breaking-width) {
		--content-width: #{$content-frac * 100}vw;
		--bleed-size: #{(1 - $content-frac) * 100 / 4}vw;
		--inset-margin: 0rem;
	}
}

.content-width {
	display: grid;
	grid-template-columns: 1fr var(--content-width) 1fr;
}

.content-width > .content-width {
	grid-column: 1 / 4;
}

.content-width > * {
	grid-column: 2;
}

.bleed {
	grid-column: 1 / 4;
}

// Elements -------------------------------------------------------------------

@mixin box {
	background: fade-out($accent, 0.95);
	color: inherit;
	font: inherit;
	border: 1px solid $hr-fg;
	padding: 0.5em;
	border-radius: 0.2em;
}

// Key indicators
kbd {
	border: 1px solid grey;
	border-radius: 4px;
	padding: 0.1em 0.2em;
	box-shadow: rgba(128, 128, 128, 0.5) 0 2px 0;
	vertical-align: 2px;
}

hr {
	width: 100%;
	border: none;
	border-top: 1px solid $hr-fg;
}

details {
	// collapsy thing
	@include box;
	background: fade-out($accent, 0.95);

	// relying on inner margins
	padding-top: 0;
	padding-bottom: 0;

	summary {
		cursor: pointer;
		font-size: 0.9em;
		margin: .5em;
	}
}

blockquote:not([admonition]) {
	@include box;

	padding: 0.5em 1em;
	margin-left: 0;
	margin-right: 0;
}

// Elements: Input ------------------------------------------------------------

textarea,
input:not([type]),
input[type=url] {
	// typy things
	@include box;
	padding: 0.2em 0.5em;
	margin: 0.2em 0;
	font-size: 0.9em;
}

input[type=submit], button, a[role=button] {
	// clicky things
	@include box;
	padding: 0.2em 0.5em;
	margin: 0.2em 0;
	font-size: 0.9em;
	background: fade-out($accent, 0.8);
	cursor: pointer;
}

a[role=button] {
	display: inline-block;
	text-decoration: none;
}

// Elements: Custom -----------------------------------------------------------

// ul items in a line
ul.li-flat {
	padding-left: 0;

	display: flex;
	flex-wrap: wrap;

	.text-centre & {
		justify-content: center;
	}

	& > li {
		list-style: none;
		display: inline;

		&:not(:first-child)::before {
			content: "â¬¥";
			margin: 0 0.5em;
		}
	}
}

@mixin fence($side) {
	border-#{$side}: 1px solid $hr-fg;
	padding-#{$side}: 0.3em;
}

.fence-t, .fence-y { @include fence(top); }
.fence-b, .fence-y { @include fence(bottom); }

.badge {
	// to override anchor styling
	color: white !important;
	&:hover { color: #aaa !important; }
	text-decoration: none !important;

	font-size: 80%;
	padding: .3ex 1ex;
	margin: 0 0.2ex;
	background: $accent-bg;
	border-radius: 1em;
}

// Customisation Utils --------------------------------------------------------

@for $i from 0 through 4 {
	html .mt-#{$i} { margin-top:    $i * 1rem !important; }
	html .mb-#{$i} { margin-bottom: $i * 1rem !important; }
	html .mx-#{$i} { margin-left:   $i * 1rem !important; margin-right:  $i * 1rem !important; }
	html .my-#{$i} { margin-top:    $i * 1rem !important; margin-bottom: $i * 1rem !important; }
}
html .mx-auto { margin-left: auto !important; margin-right: auto !important; }

// Flexbox stuff
.flex-centre {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
}

.text-centre {
	text-align: center;
}
